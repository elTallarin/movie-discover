{"version":3,"sources":["constants.ts","services/api.service.ts","navigation/appHeader/AppHeader.tsx","state/api-config.context.tsx","types/ratings.enum.ts","utilities/api.utility.ts","state/rating.context.tsx","pages/discover/components/Movies/components/Movie/Movie.tsx","pages/discover/components/Movies/Movies.tsx","pages/discover/components/ratingFilter/components/rating/Rating.tsx","pages/discover/components/ratingFilter/RatingFilter.tsx","pages/discover/components/searchMovies/SearchMovie.tsx","pages/discover/Discover.view.tsx","pages/discover/Discover.container.tsx","utilities/movies.utility.ts","utilities/raiting.utility.ts","pages/movie-details/components/movieMain/components/movieResume/MovieResume.tsx","pages/movie-details/components/movieMain/components/movieTrailer/MovieTrailer.tsx","pages/movie-details/components/movieMain/MovieMain.tsx","pages/movie-details/components/movieOverview/MovieOverview.tsx","pages/movie-details/components/movieCast/MovieCast.tsx","pages/movie-details/MovieDetails.view.tsx","pages/movie-details/MovieDetails.container.tsx","navigation/NotFound.tsx","navigation/appFooter/appFooter.tsx","navigation/ScrollToTop.tsx","navigation/Router.config.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["APIS","EXTERNALS","API_KEY","process","BASE_URL","getAPIConfiguration","url","CONFIGURATION","params","api_key","axios","get","then","response","data","discoverMovies","DISCOVER","language","region","sort_by","include_adult","include_video","page","results","searchMovies","query","SEARCH","getMovieDetails","movieId","DETAIL","replace","getMovieCredits","MOVIE_CAST","getMovieTrailerKey","TRAILER","key","AppHeader","className","Container","Row","Col","xs","to","Ratings","defaultApiConfiguration","images","base_url","undefined","poster_sizes","ApiConfigContext","createContext","getImageUrl","relativePath","apiConfiguration","RatingConext","value","ZERO","Movie","props","movie","original_title","vote_average","poster_url","id","Card","Img","variant","src","Body","Title","Movies","isEmpty","movieList","map","Rating","selectedRating","rating","setRating","onClick","newRating","concat","RatingFilter","useContext","selectRating","setSelectedRating","ONE","TWO","THREE","FOUR","FIVE","SearchMovies","useState","movieQuery","setMovieQuery","onSubmit","e","preventDefault","setQuery","InputGroup","FormControl","onChange","target","placeholder","Append","Button","type","DiscoverView","DiscoverContainer","movies","ApiConfigurationContext","setMovieList","selectedRatingStateHook","useEffect","a","uiMovies","poster_path","fetchMovies","Provider","filter","item","maxRating","matchesRatingRange","MovieResume","genres","release_date","vote_count","MovieTrailer","trailerKey","title","frameBorder","allow","MovieMain","details","Array","isArray","genre","name","reduce","gList","index","toConcat","Image","thumbnail","MovieOverview","overview","MovieCast","cast","showAllCast","setShowAllCast","Table","striped","bordered","hover","slice","REDUCED_CAST_SIZE","character","height","width","profile_url","MovieDetailsView","MovieDetailsContainer","match","movieDetails","setMovieDetails","setCast","setTrailerKey","Promise","all","credits","castWithProfileImage","castItem","profile_path","fetchMovieDetails","NotFound","AppFooter","goToExternal","window","open","bind","TMDB","GIT","ScrollToTop","pathname","useLocation","scrollTo","RouterConfig","exact","path","component","App","configuration","setConfiguration","config","fetchConfig","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d68b9285.chunk.js","sourcesContent":["export const API_KEY = process.env.REACT_APP_MOVIE_API_KEY;\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const LANGUAGE = 'en-US';\nexport const REGION = 'us'\n\nexport enum APIS {\n  CONFIGURATION = 'configuration',\n  DISCOVER = 'discover/movie',\n  SEARCH = 'search/movie',\n  DETAIL = 'movie/{0}',\n  TRAILER = 'movie/{0}/videos',\n  MOVIE_CAST ='movie/{0}/credits'\n};\n\nexport enum EXTERNALS {\n  GIT = 'https://github.com/elTallarin/movie-discover',\n  TMDB = 'https://www.themoviedb.org/'\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { BASE_URL, APIS, API_KEY, LANGUAGE, REGION } from '../constants';\nimport { IApiConfiguration } from '../types/apiConfiguration';\nimport { IDiscoverApi } from '../types/DiscoverApi';\nimport { IMovieCredits } from '../types/MovieCredits';\nimport { IMovieDetails } from '../types/movieDetails';\nimport { IMovieItem } from '../types/movieItem';\n\nexport function getAPIConfiguration(): Promise<IApiConfiguration> {\n    const url = `${BASE_URL}/${APIS.CONFIGURATION}`;\n    const params = {\n        api_key: API_KEY\n    }\n\n    return axios\n      .get<any, AxiosResponse<IApiConfiguration>>(url, { params })\n      .then(response => response.data);\n}\n\nexport function discoverMovies(): Promise<IMovieItem[]> {\n    const url = `${BASE_URL}/${APIS.DISCOVER}`;\n    const params = {\n        api_key: API_KEY,\n        language: LANGUAGE,\n        region: REGION,\n        sort_by: 'popularity.desc',\n        include_adult: 'false',\n        include_video: 'false',\n        page: '1'\n    };\n\n    return axios\n      .get<any, AxiosResponse<IDiscoverApi>>(\n        url, { params }\n      )\n      .then(response => {\n        return response.data.results;\n      });\n}\n\nexport function searchMovies(query: string): Promise<IMovieItem[]> {\n    const url = `${BASE_URL}/${APIS.SEARCH}`;\n    const params = {\n        api_key: API_KEY,\n        language: LANGUAGE,\n        region: REGION,\n        query,\n        include_adult: 'false',\n        include_video: 'false',\n        page: '1'\n    };\n    return axios\n      .get<any, AxiosResponse<IDiscoverApi>>(\n        url, { params }\n      )\n      .then(response => response.data.results);\n}\n\nexport function getMovieDetails(movieId: number): Promise<IMovieDetails> {\n  const url = `${BASE_URL}/${APIS.DETAIL.replace('{0}', `${movieId}`)}`;\n  const params = {\n    api_key: API_KEY,\n    language: LANGUAGE,\n  };\n\n  return axios\n      .get<any, AxiosResponse<IMovieDetails>>(\n        url, { params }\n      )\n      .then(response => response.data)\n};\n\nexport function getMovieCredits(movieId: number): Promise<IMovieCredits> {\n  const url = `${BASE_URL}/${APIS.MOVIE_CAST.replace('{0}', `${movieId}`)}`;\n\n  const params = {\n    api_key: API_KEY,\n  };\n\n  return axios\n      .get<any, AxiosResponse<IMovieCredits>>(\n        url, { params }\n      )\n      .then(response => response.data)\n}\n\nexport function getMovieTrailerKey(movieId: number): Promise<string> {\n  const url = `${BASE_URL}/${APIS.TRAILER.replace('{0}', `${movieId}`)}`;\n\n  const params = {\n    api_key: API_KEY,\n  };\n\n  return axios\n      .get<any, AxiosResponse<{results: {key: string}[]}>>(\n        url, { params }\n      )\n      .then(response => response.data.results[0].key)\n}\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './app-header.scss';\n\nexport default function AppHeader() {\n  return (\n    <header className='app-header'>\n      <Container className='header-container'>\n        <Row>\n          <Col xs={12} className='title'>\n          <Link to={'/'}>\n            <h1>MD <span className='fa fa-film'></span></h1>\n          </Link>\n          </Col>\n        </Row>\n      </Container>\n    </header>\n  )\n}\n","import React, { createContext } from 'react';\nimport { IApiConfiguration } from '../types/apiConfiguration';\n\nconst defaultApiConfiguration: IApiConfiguration = {\n  images: {\n  base_url: undefined,\n  poster_sizes: []\n  }\n}\n\nconst ApiConfigContext: React.Context<IApiConfiguration> =\n  createContext<IApiConfiguration>(defaultApiConfiguration);\n\nexport default ApiConfigContext;","export enum Ratings {\n  ZERO,\n  ONE,\n  TWO,\n  THREE,\n  FOUR,\n  FIVE\n}","import { IApiConfiguration } from \"../types/apiConfiguration\";\n\nexport function getImageUrl(relativePath: string | undefined, apiConfiguration: IApiConfiguration): string {\n  return (relativePath\n  && apiConfiguration\n  && apiConfiguration.images.base_url)\n    ? `${apiConfiguration.images.base_url}w500${relativePath}`\n    : 'http://placecorgi.com/500/750'\n}","import React, { createContext, Dispatch, SetStateAction } from 'react';\nimport { Ratings } from '../types/ratings.enum';\nimport { IRatingContextData } from '../types/RatingContextData';\n\nconst RatingConext: React.Context<[IRatingContextData, Dispatch<SetStateAction<IRatingContextData>>]>\n  = createContext<[IRatingContextData, Dispatch<SetStateAction<IRatingContextData>>]>([ {value: Ratings.ZERO}, () => {} ]);\n\nexport default RatingConext;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './Movie.scss';\nimport { IMovieProps } from './movieProps';\n\nexport default function Movie(props: IMovieProps) {\n  const { original_title, vote_average, poster_url, id } = props.movie;\n  return (\n    <Link to={`/movie/${id}`}>\n      <Card className='movie-card border-0'>\n        <Card.Img variant=\"top\" src={poster_url} />\n        <Card.Body>\n          <Card.Title>\n          <span className='rating fa fa-star checked'>\n          </span>\n            <span> {vote_average}</span>\n          </Card.Title>\n          <Card.Title>{ original_title }</Card.Title>\n        </Card.Body>\n      </Card>\n    </Link>\n  )\n}\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { isEmpty } from 'lodash';\nimport Movie from './components/Movie/Movie';\nimport { IMoviesProps } from './MoviesProps';\nimport './Movies.scss'\n\nexport default function Movies(props: IMoviesProps) {\n  return (\n    <div>\n      <Row>\n        {isEmpty(props.movieList)\n          ? (<Col xs={12} >\n            <h2>No movies to discover :(</h2>\n          </Col>)\n          : props.movieList\n              .map(movie => (\n                <Col key={movie.id} xs={'3'} className='movie-card-container'>\n                  <Movie movie={movie} />\n                </Col>\n              ))}\n      </Row>\n    </div>\n  )\n}\n","import React from 'react';\nimport { Ratings } from '../../../../../../types/ratings.enum';\nimport './rating.scss'\nimport { IRatingProps } from './ratingProps';\n\nexport function Rating(props: IRatingProps) {\n  const { selectedRating, rating, setRating } = props;\n  \n  function handleRatingSelection() {\n    const newRating: Ratings = rating === selectedRating\n      ? Ratings.ZERO\n      : rating; \n    setRating(newRating);\n  }\n\n  return (\n    <span\n      onClick={handleRatingSelection}\n      className={'rating fa'.concat(selectedRating >= rating ? ' fa-star checked' : ' fa-star-o')}>\n    </span>\n  )\n}","import React, { useContext } from 'react';\nimport RatingConext from '../../../../state/rating.context';\nimport { Ratings } from '../../../../types/ratings.enum';\nimport { Rating } from './components/rating/Rating';\n\nexport default function RatingFilter() {\n  // const [ selectedRating, setRating ] = useState<Ratings>(Ratings.ZERO);\n  const [selectedRating, selectRating] = useContext(RatingConext);\n  function setSelectedRating(rating: Ratings) {\n     selectRating({ value: rating });\n  }\n\n  return (\n    <div>\n      {/* Did not find easy way to loop over enum values, so created components one by one */}\n      <Rating\n        selectedRating={selectedRating.value}\n        rating={Ratings.ONE}\n        setRating={setSelectedRating}/>\n      <Rating\n        selectedRating={selectedRating.value}\n        rating={Ratings.TWO}\n        setRating={setSelectedRating}/>\n      <Rating\n        selectedRating={selectedRating.value}\n        rating={Ratings.THREE}\n        setRating={setSelectedRating}/>\n      <Rating\n        selectedRating={selectedRating.value}\n        rating={Ratings.FOUR}\n        setRating={setSelectedRating}/>\n      <Rating\n        selectedRating={selectedRating.value}\n        rating={Ratings.FIVE}\n        setRating={setSelectedRating}/>\n    </div>\n  )\n}","import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport RatingFilter from '../ratingFilter/RatingFilter';\nimport './searchMovie.scss'\nimport { ISearchMoviesProps } from './searchMoviesProps';\n\nexport default function SearchMovies(props: ISearchMoviesProps) {\n  const [movieQuery, setMovieQuery] = useState<string>('');\n\n  const handleQueryChange = (e: ChangeEvent<any>): void => {\n    setMovieQuery(e.target.value)\n  }\n\n  const notifyMovieQueryChange = (e: FormEvent): void => {\n    e.preventDefault();\n    props.setQuery({ query: movieQuery });\n  }\n\n  return (\n    <div className='search-and-filter-movies'>\n      <form onSubmit={ notifyMovieQueryChange } className='search-movies'>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            value={movieQuery}\n            onChange={handleQueryChange}\n            placeholder=\"search\"\n          />\n          <InputGroup.Append>\n            <Button\n              className='discover'\n              variant=\"outline-secondary\"\n              type='submit'>\n                Discover!\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </form>\n      <div className='filter-movies'>\n        <RatingFilter />\n      </div>\n    </div>\n    \n  )\n}","import React from 'react';\nimport Movies from './components/Movies/Movies';\nimport SearchMovies from './components/searchMovies/SearchMovie';\nimport { IDiscoverViewProps } from './discoverViewProps';\nimport './discover-view.scss'\n\nexport default function DiscoverView(props: IDiscoverViewProps) {\n  const { setMovieQuery, movieList } = props;\n  return (\n    <div className='discover-view'>\n      <SearchMovies setQuery={setMovieQuery} />\n      <Movies movieList={movieList} />\n    </div>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react';\n\nimport ApiConfigurationContext from '../../state/api-config.context';\nimport { discoverMovies, searchMovies } from '../../services/api.service';\nimport { IUiMovieItem } from '../../types/uiMovieItem';\nimport { IMovieItem } from '../../types/movieItem';\nimport { getImageUrl } from '../../utilities/api.utility';\nimport RatingConext from '../../state/rating.context';\nimport { Ratings } from '../../types/ratings.enum';\nimport { filterMoviesByRating } from '../../utilities/movies.utility';\nimport DiscoverView from './Discover.view';\n\n\nexport interface IMovieQuery {\n  query: string;\n}\n\nexport default function DiscoverContainer() {\n  const apiConfiguration = useContext(ApiConfigurationContext);\n  const [ movieQuery, setMovieQuery ] = useState<IMovieQuery>({ query: '' });\n  const [movieList, setMovieList] = useState<IUiMovieItem[]>([]);\n  const selectedRatingStateHook = useState({ value: Ratings.ZERO });\n  const selectedRating = selectedRatingStateHook[0].value\n\n  useEffect(() => {\n    async function fetchMovies() {\n      let movies: IMovieItem[] = [];\n      const { query } = movieQuery;\n\n      if (query) {\n        movies = await searchMovies(query);\n      } else {\n        movies = await discoverMovies();\n      }\n\n      const uiMovies: IUiMovieItem[] = movies\n        .map(movie => {\n          const poster_url = getImageUrl(movie.poster_path, apiConfiguration)\n          return { ...movie, poster_url  }\n        })\n\n      setMovieList(uiMovies);\n    }\n    fetchMovies();\n  }, [movieQuery, apiConfiguration])\n\n  return (\n    <RatingConext.Provider value={selectedRatingStateHook}>\n      <DiscoverView\n        setMovieQuery={setMovieQuery}\n        movieList={filterMoviesByRating(movieList, selectedRating)} />\n    </RatingConext.Provider>\n  )\n}\n","import { IUiMovieItem } from \"../types/uiMovieItem\";\nimport { Ratings } from \"../types/ratings.enum\";\nimport { matchesRatingRange } from \"./raiting.utility\";\n\nexport function filterMoviesByRating(movies: IUiMovieItem[], rating: Ratings): IUiMovieItem[] {\n  if (rating === Ratings.ZERO) {\n    return movies;\n  }\n  return movies\n    .filter(movie => matchesRatingRange(movie, rating));\n}","import { IRatingable } from \"../types/ratingable\";\nimport { Ratings } from \"../types/ratings.enum\";\n\nconst ratingRangeLenght = 2;\n\nexport function matchesRatingRange(item: IRatingable, rating: Ratings): boolean {\n  const { vote_average } = item;\n  const maxRating = rating * ratingRangeLenght;\n  const minRating = maxRating - ratingRangeLenght\n\n  return (vote_average >= minRating && vote_average < maxRating);\n}","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { IMovieResumeProps } from './MovieResumeProps';\nimport './movie-resume.scss'\n\nexport default function MovieResume(props: IMovieResumeProps) {\n  const { original_title, genres,release_date, vote_average, vote_count }\n    = props;\n\n  return (\n    <Row className='movie-resume'>\n      <Col xs='9'>\n        <h1 className='title'>{original_title}</h1>\n        <div>{ `${genres} | ${release_date}` }</div>\n      </Col>\n      <Col xs='3'>\n        <div className=\"rating-container\">\n          <div className=\"rating-info\">\n            <span\n              className={'rating fa fa-star checked'}>\n            </span>\n            <span className='rating'>\n              { vote_average }\n              <span className='max-rating'>/10</span>\n            </span>\n          </div>\n          <div className=\"vote-count\">\n            {vote_count}\n          </div>\n        </div>\n      </Col>\n    </Row>\n  )\n}","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { IMovieTrailerProps } from './MovieTrailerProps';\nimport './movie-trailer.scss'\n\nexport default function MovieTrailer(props: IMovieTrailerProps) {\n  const { trailerKey } = props;\n\n  return(\n    <Row className='movie-trailer'>\n      <Col className='videoWrapper' xs='12'>\n        <iframe\n        title='video'\n        src={`https://www.youtube.com/embed/${trailerKey}`}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe>  \n      </Col> \n    </Row>\n  )\n}\n","import React from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport MovieResume from './components/movieResume/MovieResume';\nimport MovieTrailer from './components/movieTrailer/MovieTrailer';\nimport { IMovieMainProps } from './MovieMainProps';\nimport './movie-main.scss'\n\nexport default function MovieMain(props: IMovieMainProps) {\n  const { details, trailerKey } = props;\n  const genres = details && Array.isArray(details.genres)\n    ? details.genres\n      .map(genre => genre.name)\n      .reduce((gList, genre, index) => {\n        const toConcat = index === 0\n          ? genre\n          : `, ${genre}`;\n        return gList.concat(toConcat);\n      }, '' )\n    : '';\n\n  return (\n    <Row className='movie-main'>\n        <Col xs='4'>\n          <Image src={ details?.poster_url } thumbnail />\n        </Col>\n        <Col xs='8' >\n          <MovieResume\n            original_title={details?.original_title || ''}\n            genres={genres}\n            release_date={details?.release_date || ''}\n            vote_average={details?.vote_average || -1}\n            vote_count={details?.vote_count || -1} />\n          <MovieTrailer trailerKey={trailerKey || ''} />\n        </Col>\n      </Row>\n  )\n}\n","import React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport './movie-overview.scss'\n\nexport interface IMovieOverview {\n  overview: string;\n}\n\nexport default function MovieOverview(props: IMovieOverview) {\n  const { overview } = props;\n\n  return (\n    <Row className='movie-overview'>\n      <Col xs='12'>\n        <h4>Overview</h4>\n        <p>{ overview }</p>\n      </Col>\n    </Row>\n  )\n}","import React, { useState } from 'react';\nimport { Row, Col, Table, Image, Button } from 'react-bootstrap';\nimport { IMovieCast } from './MoviCastProps';\nimport './movie-cast.scss'\n\nexport default function MovieCast(props: IMovieCast) {\n  const REDUCED_CAST_SIZE = 8;\n  const { cast } = props;\n  const [ showAllCast, setShowAllCast ] = useState<boolean>(false);\n\n  function toggleShowAllCast() {\n    setShowAllCast(!showAllCast);\n  }\n  return (\n    <Row className='movie-cast'>\n      <Col xs='12'>\n        <h4>Cast</h4>\n        <Table striped bordered={false} hover>\n          <tbody>\n          { (showAllCast\n              ? cast\n              : cast.slice(0, REDUCED_CAST_SIZE + 1)\n            )\n            .map((character) => (\n            <tr key={character.id}>\n              <td><Image height='44' width='32'  src={ character.profile_url } /></td>\n              <td>{character.name }</td>\n              <td>{character.character}</td>\n            </tr>\n          )) }\n          </tbody>  \n        </Table>\n      </Col>\n      <Col className='actions' xs='12'>\n        <Button onClick={toggleShowAllCast} variant=\"link\">\n          { showAllCast\n              ? 'show less'\n              : 'show more'\n          }\n        </Button>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { IMovieDetailsViewProps } from './MovieDetailsViewProps';\nimport MovieMain from './components/movieMain/MovieMain';\nimport MovieOverview from './components/movieOverview/MovieOverview';\nimport MovieCast from './components/movieCast/MovieCast';\nimport './movie-detail.scss'\n\nexport default function MovieDetailsView(props: IMovieDetailsViewProps) {\n  const { details, cast, trailerKey } = props;\n  \n  return (\n    <div className='movie-detail'>\n      <MovieMain details={details} trailerKey={trailerKey || ''} />\n      <MovieOverview overview={details?.overview || ''}/>\n      <hr/>\n      <MovieCast cast={cast || []} />\n    </div>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { getMovieCredits, getMovieDetails, getMovieTrailerKey } from '../../services/api.service';\nimport ApiConfigurationContext from '../../state/api-config.context'\nimport { IMovieCastItem } from '../../types/movieCastItem';\nimport { IMovieDetails } from '../../types/movieDetails';\nimport { getImageUrl } from '../../utilities/api.utility';\nimport MovieDetailsView from './MovieDetails.view';\n\nexport interface IMovieDetailsContainerProps {\n  match: {\n    params: { movieId: string; }\n  };\n}\n\nexport default function MovieDetailsContainer(props: IMovieDetailsContainerProps) {\n  const { movieId } = props.match.params;\n  const apiConfiguration = useContext(ApiConfigurationContext);\n  const [ movieDetails, setMovieDetails ] = useState<IMovieDetails | null>(null)\n  const [ cast, setCast ] = useState<IMovieCastItem[] | null>(null);\n  const [ trailerKey, setTrailerKey ] = useState<string | undefined>(undefined);\n  \n  useEffect(() => {\n    async function fetchMovieDetails() {\n      const [movie, credits, trailerKey] = await Promise.all([\n        getMovieDetails(+movieId),\n        getMovieCredits(+movieId),\n        getMovieTrailerKey(+movieId)\n      ]);\n      \n      const poster_url = getImageUrl(movie.poster_path, apiConfiguration)\n      const castWithProfileImage = credits.cast\n        .map(castItem => {\n          const profile_url = getImageUrl(castItem.profile_path, apiConfiguration);\n          return { ...castItem, profile_url };\n        })\n\n      setMovieDetails({ ...movie, poster_url});\n      setCast(castWithProfileImage);\n      setTrailerKey(trailerKey);\n    }\n\n    fetchMovieDetails()\n  }, [movieId, setMovieDetails, apiConfiguration, setCast])\n\n  return (\n    <MovieDetailsView\n      details={movieDetails}\n      cast={cast}\n      trailerKey={trailerKey}/>\n  )\n}","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1>Not Found!</h1>\n    </div>\n  )\n} ","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { EXTERNALS } from '../../constants';\nimport './app-footer.scss';\n\nexport default function AppFooter() {\n\n  function goToExternal(url: string) {\n    window.open(url, '_blank');\n  }\n\n  return (<footer className='app-footer'>\n    <Container className='footer-container'>\n      <Row>\n        <Col className='footer-links' xs={12}>\n          <span\n            // antipattern, better to have component and provide url\n            // as prop\n            onClick={goToExternal.bind({}, EXTERNALS.TMDB)}\n            className='external'>\n            TMDB</span>\n          <span\n            onClick={goToExternal.bind({}, EXTERNALS.GIT)} \n            className='external fa fa-github'></span>\n        </Col>\n      </Row>\n    </Container>\n  </footer>)\n}","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import { isEmpty } from 'lodash';\nimport React, { useContext } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport AppHeader from './appHeader/AppHeader';\nimport ApiConfigurationContext from '../state/api-config.context'\nimport './router-config.scss';\nimport { DiscoverContainer } from '../pages/discover';\nimport MovieDetailsContainer from '../pages/movie-details/MovieDetails.container';\nimport NotFound from './NotFound';\nimport AppFooter from './appFooter/appFooter';\nimport ScrollToTop from './ScrollToTop';\n\nexport default function RouterConfig() {\n  const apiConfiguration = useContext(ApiConfigurationContext);\n  return (\n    <BrowserRouter>\n      <ScrollToTop />\n      <AppHeader />\n      <Container className='main-container'>\n        { (isEmpty(apiConfiguration))\n            ? <div>...</div>\n            : (\n              // Moving this routes to a separate component adds a 'custom-switch' class\n              // to containing div that adds unexpected padding\n                <Switch>\n                  <Route exact path={'/'} component={DiscoverContainer} />\n                  <Route path={'/movie/:movieId'} component={MovieDetailsContainer} />\n                  <Route path='*'>\n                    <NotFound />\n                  </Route>\n                </Switch>\n            )\n        }\n      </Container>\n      <AppFooter />\n    </BrowserRouter>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { getAPIConfiguration } from './services/api.service';\nimport './App.scss';\nimport { RouterConfig } from './navigation';\nimport ApiConfigContext from './state/api-config.context';\nimport { IApiConfiguration } from './types/apiConfiguration';\n\n\n\nfunction App() {\n  const [configuration, setConfiguration] = useState<IApiConfiguration>({} as IApiConfiguration);\n\n  useEffect(() => {\n    async function fetchConfig() {\n      const config = await getAPIConfiguration();\n\n      setConfiguration(config);\n    }\n\n    fetchConfig()\n  }, [setConfiguration])\n\n  return (\n    <ApiConfigContext.Provider value={configuration}>\n      <RouterConfig />\n    </ApiConfigContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}